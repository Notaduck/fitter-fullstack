version: "3.8"
services:
  app:
    container_name: fitter-go
    build:
      context: ./fitter-go
      target: dev
    volumes:
        - ./fitter-go:/app:rw,delegated
    tty: true
    ports: 
      - 3030:3030
      - 2345:2345
    depends_on:
      - db
      - rabbitmq
    environment:
      AMQP_SERVER_URL: amqp://guest:guest@rabbitmq:5672/
  parser:
    container_name: fitter-go-parser
    build:
      context: ./fitter-go-fit-parser
      target: dev
    volumes:
        - ./fitter-go-fit-parser:/app:rw,delegated
    tty: true
    ports: 
      - 2346:2345
    depends_on:
      - db
      - rabbitmq
    environment:
      AMQP_SERVER_URL: amqp://consumer:consumer@rabbitmq:5672/
  db:
      image: postgres:15.4-alpine
      environment:
        - POSTGRES_USER=fitter
        - POSTGRES_PASSWORD=fitter
      ports:
        - '5432:5432'
      volumes: 
        - dbdata:/var/lib/postgresql/data
      deploy:
        restart_policy:
          condition: on-failure
  web:
      build:
        context: ./web
        dockerfile: Dockerfile
      container_name: fitter-web
      ports:
        - '3000:3000'
      volumes:
        - ./web:/app
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: passwd 
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  rabbitmq:
      image: rabbitmq:3-management-alpine
      ports:
        - 5672:5672
        - 15672:15672
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
volumes:
  pgadmin-data:
  dbdata:
    driver: local
